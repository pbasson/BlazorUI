@page "/Weather"
@using Blazor.Core.Helpers
@using Blazor.Core.Models.Entities
@using Blazor.Core.Models.Settings
@using Blazor.UI.Components.PageComponents
@using Blazor.UI.Helpers
@using Blazor.UI.Services
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>@PageStatics.WeatherPage</PageTitle>

<h1>@PageStatics.WeatherPage</h1>

<p>@PageStatics.WeatherPageDetails</p>

<NavigateHome />

@if (DataSource.Loading)
{
    <LoadingComponent />
}
else
{
    <button class="btn btn-primary btn-space" @onclick="LoadData"><i class="bi bi-arrow-right"></i> Load More</button>
    <button class="btn btn-primary btn-space" @onclick="@( () => DataSource.ResetData() )"><i class="bi bi-arrow-clockwise"></i> Reset</button>

    <WeatherSummaryGrid Settings="@DataSource" />
    
    <WeatherGrid DataSource="@DataSource.WeatherList" />
}

@code {
    [Inject] WeatherServices _services { get; set; } = default!;

    private WeatherSettings DataSource { get; set; } = new();
    
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        DataSource.WeatherList = await _services.GetWeatherForecastAsync(DataSource.WeatherList);
        if(DataSource != null && DataSource.WeatherList != null && DataSource.WeatherList.Any() )
        {
            DataSource.UnsetLoading();
        }
    }

}
    using Blazor.Core.Models.Settings;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/home/preet/Projects/Projects-W/Web-Projects/Web-Projects-002/BlazorUI/src/Blazor.UI/Components/Pages/Weather.razor"
