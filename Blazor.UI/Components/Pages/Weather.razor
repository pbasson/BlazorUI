@page "/Weather"
@using Blazor.UI.Models
@using Blazor.UI.Components.PageComponents
@using Blazor.UI.Services
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

<button class="btn btn-primary btn-space" @onclick="@( () => NavigateTo() )"  ><i class="bi bi-arrow-90deg-left"></i> Back To Home  </button>


@if (Loading)
{
    <LoadingComponent />
}
else
{
    <button class="btn btn-primary btn-space" @onclick="LoadData"><i class="bi bi-arrow-clockwise"></i> Reset</button>

    <WeatherGrid DataSource="@DataSource" />
}

@code {
    [Inject] NavigationManager _navManager { get; set; } = default!;
    [Inject] WeatherServices _services { get; set; } = default!;

    private List<WeatherForecast> DataSource { get; set; } = new();

    bool Loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        DataSource = await _services.GetWeatherForecastAsync();
        if(DataSource != null && DataSource.Any() )
        {
            Loading = false;
        }
    }

    void NavigateTo()
    {
        Console.WriteLine("Navigate To");
        _navManager.NavigateTo("/"); 
    }
}